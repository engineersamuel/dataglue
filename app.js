// Generated by CoffeeScript 1.6.2
(function() {
  var app, dataSetCache, dbLogic, express, http, logger, path, port, prettyjson, utils;

  express = require('express');

  http = require('http');

  path = require('path');

  utils = require('./src/dataglue/utilitis/utils');

  logger = require('tracer').colorConsole(utils.logger_config);

  dataSetCache = require('./src/dataglue/db/dataset_cache');

  dbLogic = require('./src/dataglue/db/db_logic');

  prettyjson = require('prettyjson');

  port = process.env['OPENSHIFT_INTERNAL_PORT'] || process.env['OPENSHIFT_NODEJS_PORT'] || 3000;

  app = express();

  app.configure(function() {
    app.set('port', port);
    app.set('views', __dirname + '/public');
    app.set('view engine', 'jade');
    app.engine('jade', require('jade').__express);
    app.use(express.favicon());
    app.use(express.logger());
    app.use(express.compress());
    app.use(express.methodOverride());
    app.use(express.bodyParser());
    app.use(app.router);
    app.use(express["static"](path.join(__dirname, 'public')));
    return app.configure('development', function() {
      return app.use(express.errorHandler());
    });
  });

  app.get('/', function(req, res) {
    console.log("Hello World!");
    return res.render('index.jade', {});
  });

  app.get('/db/ref/:_id', function(req, res) {
    logger.debug("Looking up ref with _id: " + (req.param('_id')));
    return dataSetCache.ref_get(req.param('_id'), function(err, doc) {
      return res.send(doc);
    });
  });

  app.post('/dataset/query', function(req, res) {
    return dbLogic.queryDataSet(req.body.doc, function(err, results) {
      if (err) {
        throw err;
      } else {
        return res.send(results);
      }
    });
  });

  app.get('/dataset/query/:_id', function(req, res) {
    logger.debug("Looking up data set with _id: " + (req.param('_id')));
    return dataSetCache.ref_get(req.param('_id'), function(err, doc) {
      return dbLogic.loadDataSet(doc, function(err, results) {
        if (err) {
          logger.error("Error loading dataset: " + (prettyjson.render(err)));
        } else {

        }
        return res.send(results);
      });
    });
  });

  process.on('exit', function() {
    logger.info("process exiting.");
    return app.close();
  });

  http.createServer(app).listen(app.get('port'), function() {
    return logger.info("Data glue server listening on port " + app.get('port'));
  });

}).call(this);

/*
//@ sourceMappingURL=app.map
*/
